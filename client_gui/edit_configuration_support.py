#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jun 18, 2021 02:51:32 PM CEST  platform: Windows NT
import json
import sys
from tkinter import END

from other_classes.configuration import Configuration

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True


def populate_configuration():
    global tags_list

    inner_frame = w.Scrolledwindow1_f
    tags_list = []

    tags = configuration['small_list_of_fields']
    current_tags = configuration['fields_to_extract']

    for i in range(len(tags)):
        var = tk.IntVar()
        c1 = tk.Checkbutton(inner_frame, text=tags[i], variable=var, onvalue=1, offvalue=0, background="white")
        c1.grid(row=i, column=1)
        if tags[i] in current_tags:
            var.set(1)

        tags_list.append((tags[i], var, c1))

    if tags_list:
        tags_list[0][2].wait_visibility()

    bbox = inner_frame.bbox()
    w.Scrolledwindow1.configure(scrollregion=bbox)


def init(top, gui, *args, **kwargs):
    global w, top_level, root, configuration
    w = gui
    top_level = top
    root = top
    f = open("../configuration.json", "r")
    configuration = json.load(f)
    f.close()
    populate_configuration()


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None


def select_all():
    for a, b, c in tags_list:
        b.set(1)


def deselect_all():
    for a, b, c in tags_list:
        b.set(0)


def save():
    tags = []

    for a, b, c in tags_list:
        if b.get() == 1:
            tags.append(a)

    c = Configuration(tags)
    js = json.dumps(c.__dict__)

    with open("../configuration.json", "w") as f:
        f.write(str(js))


if __name__ == '__main__':
    import edit_configuration

    edit_configuration.vp_start_gui()
